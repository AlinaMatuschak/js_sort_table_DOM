{"version":3,"sources":["scripts/main.js"],"names":["headTable","document","querySelector","bodyTable","titles","firstElementChild","children","rows","parseNumber","str","parseFloat","slice","join","replace","addEventListener","target","columnIndex","indexOf","sort","prevRow","nextRow","prevContent","textContent","nextContent","startsWith","isNaN","localeCompare","append"],"mappings":";AAAA,aA8BC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA5BD,IAAMA,EAAYC,SAASC,cAAc,SACnCC,EAAYF,SAASC,cAAc,SACnCE,EAASJ,EAAUK,kBAAkBC,SACrCC,EAAWJ,EAAAA,EAAUG,UAuB3B,SAASE,EAAYC,GACZC,OAAAA,WAAW,EAAKD,GAAME,MAAM,GAAGC,KAAK,IAAIC,QAAQ,IAAK,MAtB9Db,EAAUc,iBAAiB,QAAS,SAAgB,GAAbC,IAAAA,EAAAA,EAAAA,OAC/BC,EAAc,EAAIZ,GAAQa,QAAQF,GAExCR,EAAKW,KAAK,SAACC,EAASC,GACZC,IAAAA,EAAcF,EAAQb,SAASU,GAAaM,YAC5CC,EAAcH,EAAQd,SAASU,GAAaM,YAE9CD,OAAAA,EAAYG,WAAW,KAClBhB,EAAYa,GAAeb,EAAYe,GAG5CE,OAAOJ,GACFA,EAAYK,cAAcH,IAG3BF,GAAeE,IAGzBpB,EAAUwB,OAAVxB,MAAAA,EAAoBI,EAAAA","file":"main.1b88b381.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\r\n\r\nconst headTable = document.querySelector('thead');\r\nconst bodyTable = document.querySelector('tbody');\r\nconst titles = headTable.firstElementChild.children;\r\nconst rows = [...bodyTable.children];\r\n\r\nheadTable.addEventListener('click', ({ target }) => {\r\n  const columnIndex = [...titles].indexOf(target);\r\n\r\n  rows.sort((prevRow, nextRow) => {\r\n    const prevContent = prevRow.children[columnIndex].textContent;\r\n    const nextContent = nextRow.children[columnIndex].textContent;\r\n\r\n    if (prevContent.startsWith('$')) {\r\n      return parseNumber(prevContent) - parseNumber(nextContent);\r\n    }\r\n\r\n    if (isNaN(+prevContent)) {\r\n      return prevContent.localeCompare(nextContent);\r\n    }\r\n\r\n    return +prevContent - +nextContent;\r\n  });\r\n\r\n  bodyTable.append(...rows);\r\n});\r\n\r\nfunction parseNumber(str) {\r\n  return parseFloat([ ...str ].slice(1).join('').replace(',', '.'));\r\n};\r\n"]}